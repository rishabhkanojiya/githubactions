name: Individual Build Upload (Using Script)
# A github actions for backing up, removing, and uploading react code.
# The actions perform the following tasks:
# 1. Generates and caches a build.
# 2. Publish the build to Integration.
# 3. Wait for approval before uploading it to Prod; once approved, proceed with the production push.
# 4. Sends a message on slack

on:
  workflow_dispatch:
    branches: [main]

  push:
    branches: [main]

  # the "push" action begins once the code is pushed/merged in the "main" branch.
  # You can add multiple branches too.
  # for example : Branches: [main, prod]
  # The action in the preceding example will be executed once the code is pushed/merged in the "main" and "prod" branches.

env:
  project_folder: Dot.net.files.test.web

jobs:
  defineBaseDirectory:
    name: Define Base Directory
    runs-on: ubuntu-latest
    outputs:
      workingDirectory: ${{ steps.setDirectory.outputs.workingDirectory }}

    steps:
      - name: Setting Up Working Directory Using Output
        id: setDirectory
        run: |
          echo "some var: $project_folder"
          echo "::set-output name=workingDirectory::$project_folder"

  build:
    name: Setup
    needs: defineBaseDirectory
    uses: ./.github/workflows/nodeBuild.yml
    with:
      project_folder: ${{needs.defineBaseDirectory.outputs.workingDirectory}}

  css:
    name: Uploading CSS
    needs: build
    uses: ./.github/workflows/removeCopySh.yml
    with:
      args: "--exclude '*' --include 'css/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      project_folder: ${{needs.build.outputs.workingDirectory}}
      shouldRun: ${{ needs.build.outputs.isCss == 'true' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_PROD: "false"
      IS_RM: "true"
    secrets: inherit

  # IS_PROD:- ("true"/"false")  Flag to specify environment and to create backup
  # IS_RM:- ("true"/"false") Flag to remove build

  images:
    name: Uploading Images
    needs: build
    uses: ./.github/workflows/removeCopySh.yml
    with:
      args: "--exclude '*' --include 'images/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      project_folder: ${{needs.build.outputs.workingDirectory}}
      shouldRun: ${{ needs.build.outputs.isImage == 'true' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_PROD: "false"
    secrets: inherit

  translations:
    name: Uploading Translations
    needs: build
    uses: ./.github/workflows/removeCopySh.yml
    with:
      args: "--exclude '*' --include 'translations/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      project_folder: ${{needs.build.outputs.workingDirectory}}
      shouldRun: ${{ needs.build.outputs.isTrans == 'true' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_PROD: "false"
      IS_RM: "true"
    secrets: inherit

  configs:
    name: Uploading Configs
    needs: build
    uses: ./.github/workflows/removeCopySh.yml
    with:
      args: "--exclude '*' --include 'configs/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      project_folder: ${{needs.build.outputs.workingDirectory}}
      shouldRun: ${{ needs.build.outputs.isConfig == 'true' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_PROD: "false"
      IS_RM: "true"
    secrets: inherit

  javascript:
    name: Uploading Javascript Files
    needs: build
    uses: ./.github/workflows/removeCopySh.yml
    with:
      args: "--exclude '*' --include 'js/*' --include 'asset-manifest.json' --include 'static/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      project_folder: ${{needs.build.outputs.workingDirectory}}
      shouldRun: ${{ needs.build.outputs.isMain == 'true' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_PROD: "false"
      IS_RM: "true"
    secrets: inherit

  prodCss:
    name: Uploading CSS (Prod)
    needs: [build, css]
    if: ${{ needs.build.outputs.isDevOnly  == 'false' }}
    uses: ./.github/workflows/removeCopySh.yml
    with:
      args: "--exclude '*' --include 'css/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      project_folder: ${{needs.build.outputs.workingDirectory}}
      shouldRun: ${{ needs.css.result == 'success' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_PROD: "true"
      IS_RM: "true"
    secrets: inherit

  prodImages:
    name: Uploading Images (Prod)
    needs: [build, images]
    if: ${{ needs.build.outputs.isDevOnly  == 'false' }}
    uses: ./.github/workflows/removeCopySh.yml
    with:
      args: "--exclude '*' --include 'images/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      project_folder: ${{needs.build.outputs.workingDirectory}}
      shouldRun: ${{ needs.images.result == 'success' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_PROD: "true"
    secrets: inherit

  prodTranslations:
    name: Uploading Translations (Prod)
    needs: [build, translations]
    if: ${{ needs.build.outputs.isDevOnly  == 'false' }}
    uses: ./.github/workflows/removeCopySh.yml
    with:
      args: "--exclude '*' --include 'translations/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      project_folder: ${{needs.build.outputs.workingDirectory}}
      shouldRun: ${{ needs.translations.result == 'success' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_PROD: "true"
      IS_RM: "true"
    secrets: inherit

  prodConfigs:
    name: Uploading Configs Files (Prod)
    needs: [build, configs]
    if: ${{ needs.build.outputs.isDevOnly  == 'false' }}
    uses: ./.github/workflows/removeCopySh.yml
    with:
      args: "--exclude '*' --include 'configs/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      project_folder: ${{needs.build.outputs.workingDirectory}}
      shouldRun: ${{ needs.configs.result == 'success' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_RM: "true"
      IS_PROD: "true"
    secrets: inherit

  prodJavascript:
    name: Uploading Javascript Files (Prod)
    needs: [build, javascript]
    if: ${{ needs.build.outputs.isDevOnly  == 'false' }}
    uses: ./.github/workflows/removeCopySh.yml
    with:
      args: "--exclude '*' --include 'js/*' --include 'asset-manifest.json' --include 'static/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      project_folder: ${{needs.build.outputs.workingDirectory}}
      shouldRun: ${{ needs.javascript.result == 'success' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_PROD: "true"
      IS_RM: "true"
    secrets: inherit

  slackNotification:
    name: Slack Notification
    needs:
      [
        build,
        css,
        images,
        translations,
        configs,
        javascript,
        prodCss,
        prodImages,
        prodTranslations,
        prodConfigs,
        prodJavascript,
      ]
    if: ${{ always() && !cancelled() }}
    uses: ./.github/workflows/slackMessage.yml
    secrets: inherit
