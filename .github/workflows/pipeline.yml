name: Build Upload Pipeline
# https://github.blog/2022-02-02-build-ci-cd-pipeline-github-actions-four-steps/
on:
  workflow_dispatch:
    branches: [main]

  push:
    branches: [main]

jobs:
  build:
    name: Creating Build
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: Dot.net.files.test.web

    steps:
      - name: Run Checkout
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          #  use below in case of using yarn
          # cache: "yarn"
          # cache-dependency-path: "**/yarn.lock"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            **/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          # restore-keys: |
          #   ${{ runner.os }}-build-${{ env.cache-name }}-
          #   ${{ runner.os }}-build-
          #   ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        run: npm install

        # continue-on-error: true
        # run: npm list

      # - name: Install dependencies
      #   run: npm install

      - name: Running Tests
        run: npm test
      - name: Creating Build
        run: npm run build

      - name: Cache Build
        id: cache-react-build
        uses: actions/cache@v3
        with:
          path: |
            **/build
          key: ${{ runner.os }}-cache-react-build-${{ hashFiles('**/public/version.json') }}

      - name: list files
        run: ls ./build/static/js

  DeployDev:
    needs: build
    name: Deploy On Dev
    runs-on: ubuntu-latest
    environment:
      name: Dev
      url: https://dev.com

    defaults:
      run:
        working-directory: Dot.net.files.test.web

    steps:
      - uses: actions/checkout@v3

      - name: Restoring Build Cache
        id: cache-react-build
        uses: actions/cache@v3
        with:
          path: |
            **/build
          key: ${{ runner.os }}-cache-react-build-${{ hashFiles('**/public/version.json') }}

      - name: Removing old Build
        uses: rishabhkanojiya/aws-copy-rm@remove
        with:
          args: --follow-symlinks --delete
          # args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR_BACKUP: ${{ secrets.BACKUP_SOURCE_DIR }}

      - name: Copying New Build on Int
        uses: rishabhkanojiya/aws-copy-rm@copy
        with:
          args: --follow-symlinks --delete
          # args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR_COPY: ${{ secrets.SOURCE_DIR }}
          DEST_DIR_COPY: ${{ secrets.DEST_DIR }}

  DeployProd:
    needs: [build, DeployDev]
    name: Deploy On Prod
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: https://prod.com

    defaults:
      run:
        working-directory: Dot.net.files.test.web

    steps:
      - uses: actions/checkout@v3

      - name: Restoring Build Cache
        id: cache-react-build
        uses: actions/cache@v3
        with:
          path: |
            **/build
          key: ${{ runner.os }}-cache-react-build-${{ hashFiles('**/public/version.json') }}

      - name: Backing up old Build
        uses: rishabhkanojiya/aws-copy-rm@backup
        with:
          args: --follow-symlinks --delete
          # args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR_BACKUP: ${{ secrets.BACKUP_SOURCE_DIR }}
          DEST_DIR_BACKUP: ${{ secrets.BACKUP_DEST_DIR }}

      - name: Removing old Build
        uses: rishabhkanojiya/aws-copy-rm@remove
        with:
          args: --follow-symlinks --delete
          # args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR_BACKUP: ${{ secrets.BACKUP_SOURCE_DIR }}

      - name: Copying New Build on Production
        uses: rishabhkanojiya/aws-copy-rm@copy
        with:
          args: --follow-symlinks --delete
          # args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR_COPY: ${{ secrets.SOURCE_DIR }}
          DEST_DIR_COPY: ${{ secrets.DEST_DIR }}

  slackNotification:
    runs-on: ubuntu-latest
    name: Slack Notification
    needs: [Build, DeployDev, DeployProd]
    if: ${{ always() && !cancelled() }}
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_FOOTER: ""
          SLACK_USERNAME: notification
          SLACK_MSG_AUTHOR: ${{ github.actor }}
          SLACK_ICON: https://user-images.githubusercontent.com/30200462/185666812-35fb9de3-de61-407b-9522-1c1222bad306.pngs
          SLACK_COLOR: "${{ needs.DeployProd.result != 'success' && '#ee6055' || '#60d394' }}"
          SLACK_TITLE: "${{ needs.DeployProd.result != 'success' && '‚ùå Build Upload Failed' || 'üöÄ Build Uploaded Successfully' }}"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
