name: Individual Build Upload (Using Docker)

on:
  workflow_dispatch:
    branches: [main]

  # push:
  #   branches: [main]

jobs:
  build:
    name: Setup
    uses: ./.github/workflows/nodeBuild.yml

  css:
    name: Uploading CSS
    needs: build
    uses: ./.github/workflows/removeCopy.yml
    with:
      args: "--exclude '*' --include 'css/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      shouldRun: ${{ needs.build.outputs.isCss == 'true' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_RM: "true"
    secrets: inherit

  images:
    name: Uploading Images
    needs: build
    uses: ./.github/workflows/removeCopy.yml
    with:
      args: "--exclude '*' --include 'images/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      shouldRun: ${{ needs.build.outputs.isImage == 'true' }}
      version: ${{ needs.build.outputs.versionJson }}
    secrets: inherit

  translations:
    name: Uploading Translations
    needs: build
    uses: ./.github/workflows/removeCopy.yml
    with:
      args: "--exclude '*' --include 'translations/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      shouldRun: ${{ needs.build.outputs.isTrans == 'true' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_RM: "true"
    secrets: inherit

  configs:
    name: Uploading Configs
    needs: build
    uses: ./.github/workflows/removeCopy.yml
    with:
      args: "--exclude '*' --include 'configs/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      shouldRun: ${{ needs.build.outputs.isConfig == 'true' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_RM: "true"
    secrets: inherit

  javascript:
    name: Uploading Javascript Files
    needs: build
    uses: ./.github/workflows/removeCopy.yml
    with:
      args: "--exclude '*' --include 'js/*' --include 'asset-manifest.json' --include 'static/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      shouldRun: ${{ needs.build.outputs.isMain == 'true' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_RM: "true"
    secrets: inherit

  prodCss:
    name: Uploading CSS
    needs: [build, css]
    if: ${{ needs.build.outputs.isDevOnly  == 'false' }}
    uses: ./.github/workflows/backupCopy.yml
    with:
      args: "--exclude '*' --include 'css/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      shouldRun: ${{ needs.css.result == 'success' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_RM: "true"
    secrets: inherit

  prodImages:
    name: Uploading Images
    needs: [build, images]
    if: ${{ needs.build.outputs.isDevOnly  == 'false' }}
    uses: ./.github/workflows/backupCopy.yml
    with:
      args: "--exclude '*' --include 'images/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      shouldRun: ${{ needs.images.result == 'success' }}
      version: ${{ needs.build.outputs.versionJson }}
    secrets: inherit

  prodTranslations:
    name: Uploading Translations
    needs: [build, translations]
    if: ${{ needs.build.outputs.isDevOnly  == 'false' }}
    uses: ./.github/workflows/backupCopy.yml
    with:
      args: "--exclude '*' --include 'translations/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      shouldRun: ${{ needs.translations.result == 'success' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_RM: "true"
    secrets: inherit

  prodConfigs:
    name: Uploading Configs Files
    needs: [build, configs]
    if: ${{ needs.build.outputs.isDevOnly  == 'false' }}
    uses: ./.github/workflows/backupCopy.yml
    with:
      args: "--exclude '*' --include 'configs/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      shouldRun: ${{ needs.configs.result == 'success' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_RM: "true"
    secrets: inherit

  prodJavascript:
    name: Uploading Javascript Files
    needs: [build, javascript]
    if: ${{ needs.build.outputs.isDevOnly  == 'false' }}
    uses: ./.github/workflows/backupCopy.yml
    with:
      args: "--exclude '*' --include 'js/*' --include 'asset-manifest.json' --include 'static/*' ${{ needs.build.outputs.isDryrun == 'true' && '--dryrun' || ''}}"
      shouldRun: ${{ needs.javascript.result == 'success' }}
      version: ${{ needs.build.outputs.versionJson }}
      IS_RM: "true"
    secrets: inherit

  slackNotification:
    name: Slack Notification
    needs:
      [
        build,
        css,
        images,
        translations,
        configs,
        javascript,
        prodCss,
        prodImages,
        prodTranslations,
        prodConfigs,
        prodJavascript,
      ]
    if: ${{ always() && !cancelled() }}
    uses: ./.github/workflows/slackMessage.yml
    secrets: inherit
